[{"C:\\React\\PhTrace-Front-End\\src\\components\\Alert.js":"1","C:\\React\\PhTrace-Front-End\\src\\components\\LoginForm.js":"2","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\Admin.js":"3","C:\\React\\PhTrace-Front-End\\src\\components\\UserSelect.js":"4","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\AdminEmployees.js":"5","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\AdminNotification.js":"6","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserSettings.js":"7","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\EmployeeForm.js":"8","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserSymptoms.js":"9","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\FilterVisitor.js":"10","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\SmsForm.js":"11","C:\\React\\PhTrace-Front-End\\src\\index.js":"12","C:\\React\\PhTrace-Front-End\\src\\components\\Home.js":"13","C:\\React\\PhTrace-Front-End\\src\\components\\RegisterForm.js":"14","C:\\React\\PhTrace-Front-End\\src\\App.js":"15","C:\\React\\PhTrace-Front-End\\src\\services\\usersApi.js":"16","C:\\React\\PhTrace-Front-End\\src\\services\\loginApi.js":"17","C:\\React\\PhTrace-Front-End\\src\\services\\textApi.js":"18","C:\\React\\PhTrace-Front-End\\src\\contexts\\User\\UserContext.js":"19","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\Scanner.js":"20","C:\\React\\PhTrace-Front-End\\src\\components\\DialogForm.js":"21","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserUpload.js":"22","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\Table.js":"23","C:\\React\\PhTrace-Front-End\\src\\utils\\date.js":"24","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserQRCode.js":"25","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\List.js":"26","C:\\React\\PhTrace-Front-End\\src\\utils\\healthcheck.js":"27","C:\\React\\PhTrace-Front-End\\src\\components\\Navbar.js":"28","C:\\React\\PhTrace-Front-End\\src\\services\\establishmentsApi.js":"29","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\UserForm.js":"30","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\AdminDashboard.js":"31","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserVerification.js":"32","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\FilterDashboard.js":"33","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserQr.js":"34","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserPrivacy.js":"35"},{"size":187,"mtime":1629815033623,"results":"36","hashOfConfig":"37"},{"size":2603,"mtime":1629815033628,"results":"38","hashOfConfig":"37"},{"size":11469,"mtime":1629815432378,"results":"39","hashOfConfig":"37"},{"size":474,"mtime":1609762230352,"results":"40","hashOfConfig":"37"},{"size":2834,"mtime":1629815424497,"results":"41","hashOfConfig":"37"},{"size":1145,"mtime":1629815033595,"results":"42","hashOfConfig":"37"},{"size":3159,"mtime":1623240985328,"results":"43","hashOfConfig":"37"},{"size":5869,"mtime":1624535009108,"results":"44","hashOfConfig":"37"},{"size":1700,"mtime":1629815451908,"results":"45","hashOfConfig":"37"},{"size":1973,"mtime":1629815033606,"results":"46","hashOfConfig":"37"},{"size":1712,"mtime":1629815438168,"results":"47","hashOfConfig":"37"},{"size":378,"mtime":1629817070789,"results":"48","hashOfConfig":"37"},{"size":2424,"mtime":1629815033626,"results":"49","hashOfConfig":"37"},{"size":7747,"mtime":1629815033632,"results":"50","hashOfConfig":"37"},{"size":6185,"mtime":1629815405020,"results":"51","hashOfConfig":"37"},{"size":1526,"mtime":1629815033664,"results":"52","hashOfConfig":"37"},{"size":225,"mtime":1629815033661,"results":"53","hashOfConfig":"37"},{"size":384,"mtime":1629815033663,"results":"54","hashOfConfig":"37"},{"size":105,"mtime":1629815323590,"results":"55","hashOfConfig":"37"},{"size":2642,"mtime":1629815440322,"results":"56","hashOfConfig":"37"},{"size":915,"mtime":1629815033625,"results":"57","hashOfConfig":"37"},{"size":1669,"mtime":1629815447696,"results":"58","hashOfConfig":"37"},{"size":2401,"mtime":1629815033617,"results":"59","hashOfConfig":"37"},{"size":336,"mtime":1623506194435,"results":"60","hashOfConfig":"37"},{"size":659,"mtime":1629815033640,"results":"61","hashOfConfig":"37"},{"size":4174,"mtime":1629815033611,"results":"62","hashOfConfig":"37"},{"size":174,"mtime":1623080753201,"results":"63","hashOfConfig":"37"},{"size":2449,"mtime":1629815418363,"results":"64","hashOfConfig":"37"},{"size":1730,"mtime":1629815033658,"results":"65","hashOfConfig":"37"},{"size":3273,"mtime":1629815033620,"results":"66","hashOfConfig":"37"},{"size":2541,"mtime":1629815423105,"results":"67","hashOfConfig":"37"},{"size":3819,"mtime":1629815450437,"results":"68","hashOfConfig":"37"},{"size":1427,"mtime":1629815033602,"results":"69","hashOfConfig":"37"},{"size":2784,"mtime":1629815454281,"results":"70","hashOfConfig":"37"},{"size":379,"mtime":1629815033639,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"ayawe4",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\PhTrace-Front-End\\src\\components\\Alert.js",[],["161","162"],"C:\\React\\PhTrace-Front-End\\src\\components\\LoginForm.js",["163"],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\Admin.js",["164","165"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport UserContext from \"../../contexts/User/UserContext\";\r\nimport logo from \"../../images/Logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminVisitors from \"./AdminVisitors\";\r\nimport AdminEmployees from \"./AdminEmployees\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport AdminProfile from \"./AdminProfile\";\r\nimport AdminNotification from \"./AdminNotification\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"../Alert\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport establishmentsApi from \"../../services/establishmentsApi\";\r\n// import Link from '@material-ui/core/Link';\r\nconst Admin = ({ run }) => {\r\n  const active = {\r\n    color: \"#3BCCFF\",\r\n  };\r\n  const [sideNav, setSideNav] = useState(\"Dashboard\");\r\n  const userContext = useContext(UserContext);\r\n  const [state, setState] = useState({\r\n    success: false,\r\n    reset: false,\r\n    addSuccess: false,\r\n    notifications: false,\r\n    sms: false,\r\n    updated: false,\r\n    errUpdated: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n    message: \"Successfully filtered the table.\",\r\n    addMessage: \"Successfully added new employee\",\r\n    resetMessage: \"Successfully reset\",\r\n    smsMessage: \"Successfuly sent an sms\",\r\n    updatedMessage: \"Succesfully updated your profile\",\r\n    errUpdatedMessage: \"You have entered a wrong password\",\r\n  });\r\n  const {\r\n    vertical,\r\n    horizontal,\r\n    success,\r\n    message,\r\n    reset,\r\n    resetMessage,\r\n    addSuccess,\r\n    addMessage,\r\n    notifications,\r\n    sms,\r\n    smsMessage,\r\n    updated,\r\n    updatedMessage,\r\n    errUpdated,\r\n    errUpdatedMessage,\r\n  } = state;\r\n  const handleSuccess = () => setState({ ...state, success: true });\r\n  const handleResetMessage = () => setState({ ...state, reset: true });\r\n  const handleUpdateMessage = () => setState({ ...state, updated: true });\r\n  const handleErrUpdateMessage = () => setState({ ...state, errUpdated: true });\r\n  const handleSmsMessage = () => setState({ ...state, sms: true });\r\n  const employeeSuccess = () => setState({ ...state, addSuccess: true });\r\n  const update = async (id) => {\r\n    try {\r\n      await establishmentsApi.addNotification();\r\n    } catch (exception) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    update(userContext.user.id);\r\n    if (userContext.user.notifications.length > 0) {\r\n      setState({ ...state, notifications: true });\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"section-grid admin\">\r\n        <div className=\"side container\">\r\n          <div className=\"logo\">\r\n            <img src={logo} alt=\"PhTrace logo\" />\r\n            <h1>PHTrace</h1>\r\n          </div>\r\n          <div className=\"menu\">\r\n            <div\r\n              className={sideNav === \"Dashboard\" ? \"active\" : null}\r\n              onClick={() => setSideNav(\"Dashboard\")}\r\n            >\r\n              <DashboardIcon />\r\n              <span>Dashboard</span>\r\n            </div>\r\n            <div\r\n              className={sideNav === \"Visitors\" ? \"active\" : null}\r\n              onClick={() => setSideNav(\"Visitors\")}\r\n            >\r\n              <PeopleIcon />\r\n              <span>Visitors</span>\r\n            </div>\r\n            <div\r\n              className={sideNav === \"Employees\" ? \"active\" : null}\r\n              onClick={() => setSideNav(\"Employees\")}\r\n            >\r\n              <SupervisedUserCircleIcon />\r\n              <span>Employees</span>\r\n            </div>\r\n            <div>\r\n              <PhotoCameraIcon />\r\n              <Link to=\"/scan\">Scan</Link>\r\n            </div>\r\n            <div\r\n              className={sideNav === \"Profile\" ? \"active\" : null}\r\n              onClick={() => setSideNav(\"Profile\")}\r\n            >\r\n              <AccountBoxIcon />\r\n              <span>Profile</span>\r\n            </div>\r\n            <div\r\n              className={sideNav === \"Notifications\" ? \"active\" : null}\r\n              onClick={() => setSideNav(\"Notifications\")}\r\n            >\r\n              <NotificationsActiveIcon />\r\n              <span>Notifications</span>\r\n            </div>\r\n            <div>\r\n              <ExitToAppIcon />\r\n              <Link to=\"/\" onClick={() => userContext.logOut()}>\r\n                Log Out\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"content-header\">\r\n            <div className=\"content-title\">\r\n              <div className=\"content-user\">\r\n                <div className=\"icon\">\r\n                  <SupervisorAccountIcon />\r\n                  <h4>\r\n                    {userContext.user.role[0] === \"admin\" && \"Administrator\"}\r\n                  </h4>\r\n                </div>\r\n                <div className=\"icon\">\r\n                  <EmailIcon />\r\n                  <h4>{userContext.user.email}</h4>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Breadcrumbs\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                  aria-label=\"breadcrumb\"\r\n                >\r\n                  <span\r\n                    className=\"icon\"\r\n                    style={sideNav === \"Dashboard\" ? active : null}\r\n                    onClick={() => setSideNav(\"Dashboard\")}\r\n                  >\r\n                    <DashboardIcon />\r\n                    Dashboard\r\n                  </span>\r\n                  <span\r\n                    className=\"icon\"\r\n                    style={sideNav === \"Visitors\" ? active : null}\r\n                    onClick={() => setSideNav(\"Visitors\")}\r\n                  >\r\n                    <PeopleIcon />\r\n                    Visitors\r\n                  </span>\r\n                  <span\r\n                    className=\"icon\"\r\n                    style={sideNav === \"Employees\" ? active : null}\r\n                    onClick={() => setSideNav(\"Employees\")}\r\n                  >\r\n                    <SupervisedUserCircleIcon />\r\n                    Employees\r\n                  </span>\r\n                  <span\r\n                    className=\"icon\"\r\n                    style={sideNav === \"Profile\" ? active : null}\r\n                    onClick={() => setSideNav(\"Profile\")}\r\n                  >\r\n                    <AccountBoxIcon />\r\n                    Profile\r\n                  </span>\r\n                  <span\r\n                    className=\"icon\"\r\n                    style={sideNav === \"Notifications\" ? active : null}\r\n                    onClick={() => setSideNav(\"Notifications\")}\r\n                  >\r\n                    <NotificationsActiveIcon />\r\n                    Notifications\r\n                  </span>\r\n                </Breadcrumbs>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* setSms is temporarily unavailable for visitors */}\r\n          {sideNav === \"Dashboard\" && <AdminDashboard />}\r\n          {sideNav === \"Visitors\" && userContext.user && (\r\n            <AdminVisitors\r\n              handleSuccess={handleSuccess}\r\n              handleResetMessage={handleResetMessage}\r\n              handleSmsMessage={handleSmsMessage}\r\n            />\r\n          )}\r\n          {sideNav === \"Employees\" && userContext.user && (\r\n            <AdminEmployees\r\n              employeeSuccess={employeeSuccess}\r\n              handleSmsMessage={handleSmsMessage}\r\n            />\r\n          )}\r\n          {sideNav === \"Profile\" && userContext.user && (\r\n            <AdminProfile\r\n              user={userContext.user}\r\n              handleUpdateMessage={handleUpdateMessage}\r\n              handleErrUpdateMessage={handleErrUpdateMessage}\r\n            />\r\n          )}\r\n          {sideNav === \"Notifications\" && userContext.user && (\r\n            <AdminNotification userContext={userContext} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={success}\r\n        onClose={() => setState({ ...state, success: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, success: false })}\r\n          severity=\"success\"\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={reset}\r\n        onClose={() => setState({ ...state, reset: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, reset: false })}\r\n          severity=\"success\"\r\n        >\r\n          {resetMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={addSuccess}\r\n        onClose={() => setState({ ...state, addSuccess: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, addSuccess: false })}\r\n          severity=\"success\"\r\n        >\r\n          {addMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        autoHideDuration={7000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={notifications}\r\n        onClose={() => setState({ ...state, notifications: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, notifications: false })}\r\n          severity=\"success\"\r\n        >\r\n          {`You have ${userContext.user.notifications.length} ${\r\n            userContext.user.notifications.length === 1\r\n              ? \"notification\"\r\n              : \"notifications\"\r\n          }`}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        autoHideDuration={7000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={sms}\r\n        onClose={() => setState({ ...state, sms: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, sms: false })}\r\n          severity=\"success\"\r\n        >\r\n          {smsMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        autoHideDuration={7000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={updated}\r\n        onClose={() => setState({ ...state, updated: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, updated: false })}\r\n          severity=\"success\"\r\n        >\r\n          {updatedMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        autoHideDuration={7000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={errUpdated}\r\n        onClose={() => setState({ ...state, errUpdated: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setState({ ...state, errUpdated: false })}\r\n          severity=\"error\"\r\n        >\r\n          {errUpdatedMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n",["166","167"],"C:\\React\\PhTrace-Front-End\\src\\components\\UserSelect.js",[],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\AdminEmployees.js",["168"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport UserContext from \"../../contexts/User/UserContext\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"./Table\";\r\nimport DialogForm from \"../DialogForm\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst AdminEmployees = ({ employeeSuccess, handleSmsMessage }) => {\r\n  const employeesData = [\r\n    \"#\",\r\n    \"Name\",\r\n    \"Email\",\r\n    \"Contact Number\",\r\n    \"Role\",\r\n    \"Actions\",\r\n  ];\r\n  const userContext = useContext(UserContext);\r\n  const [open, setOpen] = useState(false);\r\n  const deleteEmployee = async (id) => {\r\n    await userContext.remove(id, \"employee\");\r\n  };\r\n  const [smsOpen, setSmsOpen] = useState(false);\r\n  const [showSms, setShowSms] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(\r\n    new Array(userContext.user.visitors.length).fill(false)\r\n  );\r\n  const [numbers, setNumbers] = useState([]);\r\n  const [isNumbers, setIsNumbers] = useState(false);\r\n  const isOneChecked = () => {\r\n    for (let x = 0; x < isChecked.length; x++) {\r\n      if (isChecked[x]) return true;\r\n    }\r\n    return false;\r\n  };\r\n  const showForm = () => {\r\n    setIsNumbers(true);\r\n    setSmsOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    if (isOneChecked()) {\r\n      setShowSms(true);\r\n    } else setShowSms(false);\r\n  }, [isChecked]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"buttons\">\r\n          <div>\r\n            <button className=\"btn btn-add icon\" onClick={() => setOpen(true)}>\r\n              <AddIcon />\r\n              <span>Create new</span>\r\n            </button>\r\n          </div>\r\n          {showSms && (\r\n            <div>\r\n              <button className=\"btn btn-add icon\" onClick={showForm}>\r\n                <SendIcon />\r\n                <span>Send Message</span>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Table\r\n          data={employeesData}\r\n          rows={userContext.user.employees}\r\n          handleDelete={deleteEmployee}\r\n          kind={\"employee\"}\r\n          isChecked={isChecked}\r\n          setIsChecked={setIsChecked}\r\n          numbers={numbers}\r\n          setNumbers={setNumbers}\r\n          smsOpen={smsOpen}\r\n          setSmsOpen={setSmsOpen}\r\n          isNumbers={isNumbers}\r\n          setIsNumbers={setIsNumbers}\r\n          handleSmsMessage={handleSmsMessage}\r\n        />\r\n        <DialogForm\r\n          open={open}\r\n          setOpen={setOpen}\r\n          title={\"Adding new employee\"}\r\n          content={\r\n            \"Fill in the the following information to create employee who can scan\"\r\n          }\r\n        >\r\n          <EmployeeForm setOpen={setOpen} employeeSuccess={employeeSuccess} />\r\n        </DialogForm>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminEmployees;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\AdminNotification.js",["169","170","171"],"import React, { useState, useEffect } from \"react\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nconst AdminNotification = ({ userContext }) => {\r\n  const [open, setOpen] = useState([]);\r\n  const { notifications } = userContext.user;\r\n  const classes = useStyles();\r\n  useEffect(() => {}, []);\r\n  const removeNotification = async (id) => {\r\n    await userContext.removeNotification(id);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      {userContext.user.notifications.map((notification, index) => {\r\n        return (\r\n          <Alert\r\n            variant=\"outlined\"\r\n            key={index}\r\n            severity=\"warning\"\r\n            onClose={() => removeNotification(notification.id)}\r\n          >\r\n            <AlertTitle>He/she was detected in the DOH API!</AlertTitle>\r\n            {notification.message}\r\n          </Alert>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminNotification;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserSettings.js",["172","173"],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\EmployeeForm.js",["174","175"],"C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserSymptoms.js",["176"],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\FilterVisitor.js",["177","178"],"import React, { useState } from \"react\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { today } from \"../../utils/date\";\r\nconst FilterVisitor = ({\r\n  visitors,\r\n  handleVisitors,\r\n  setVisitors,\r\n  handleClose,\r\n  setDate,\r\n  handleSuccess,\r\n  handleResetMessage,\r\n}) => {\r\n  const { register, handleSubmit } = useForm();\r\n  const submitFilter = async (data, e) => {\r\n    const filter = {};\r\n    Object.keys(data).map((key) => {\r\n      if (data[key]) {\r\n        filter[key] = data[key];\r\n      }\r\n    });\r\n    const results = visitors.filter((a) => {\r\n      for (let key in filter) {\r\n        if (key === \"date\") {\r\n          setDate(filter[key]);\r\n          console.log(filter[key]);\r\n          const time = format(parseISO(a[\"timeStamp\"]), \"yyyy-MM-dd\");\r\n          if (filter[key] !== time) return false;\r\n        } else if (a[key].toLowerCase() !== filter[key].toLowerCase())\r\n          return false;\r\n      }\r\n      return true;\r\n    });\r\n    setVisitors(results);\r\n    handleSuccess();\r\n    handleClose();\r\n  };\r\n  const handleReset = () => {\r\n    handleClose();\r\n    handleVisitors();\r\n    handleResetMessage();\r\n    setDate(today);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"frm\" onSubmit={handleSubmit(submitFilter)}>\r\n        <div>\r\n          <label>First Name</label>\r\n          <input name=\"firstName\" ref={register} />\r\n        </div>\r\n        <div>\r\n          <label>Last Name</label>\r\n          <input name=\"lastName\" ref={register} />\r\n        </div>\r\n        <div>\r\n          <label>Date</label>\r\n          <input name=\"date\" type=\"date\" ref={register} />\r\n        </div>\r\n        <div className=\"flex-end\">\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Apply Changes\r\n          </Button>\r\n          <Button onClick={handleReset}>Reset</Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterVisitor;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\SmsForm.js",["179"],"C:\\React\\PhTrace-Front-End\\src\\index.js",[],"C:\\React\\PhTrace-Front-End\\src\\components\\Home.js",["180","181"],"import React, { useContext } from \"react\";\r\nimport qr from \"../images/QR.png\";\r\nimport tracing from \"../images/Tracing.svg\";\r\nimport privacy from \"../images/Privacy.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <section className=\"container section-grid section1\">\r\n        <div className=\"grid-one\">\r\n          <h1>We make filling in forms easy for you</h1>\r\n          <p>\r\n            Filling in forms has never been that much easier. As a user, you\r\n            will not need to experience such inconvenience every time you enter\r\n            a establishment as you only need to show your QR Code.In light of\r\n            this, establishments can now easily trace people who go in and out\r\n            of their buildings\r\n          </p>\r\n          <Link to=\"/register\">\r\n            <button className=\"btn btn-section-main\">Get Started</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"grid-two\">\r\n          <img src={qr} alt=\"Contact Tracing\" alt=\"qr code\" />\r\n        </div>\r\n      </section>\r\n      <section className=\"container section-grid section2\">\r\n        <div className=\"grid-one\">\r\n          <h1>Easier Tracing</h1>\r\n          <p>\r\n            It does not replace manual tracing, but rather aid it. It complement\r\n            and scale up the work done by human teams. It can automate the way\r\n            it filter out those at risk and it lessens the time in investigating\r\n            genuine cases\r\n          </p>\r\n        </div>\r\n        <div className=\"grid-two\">\r\n          <img src={tracing} alt=\"Scanning QR Code\" />\r\n        </div>\r\n      </section>\r\n      <section className=\"container section-grid section3\">\r\n        <div className=\"grid-one\">\r\n          <h1>Data Privacy</h1>\r\n          <p>\r\n            Organizations who deal with your personal details, whereabouts, and\r\n            preferences are dutybound to observe and respect your data privacy\r\n            rights.If you feel that your personal data has been misused,\r\n            maliciously disclosed, or improperly disposed, or if any of the\r\n            rights discussed here have been violated, the data subject has a\r\n            right to file a complaint with us.\r\n          </p>\r\n        </div>\r\n        <div className=\"grid-two\">\r\n          <img src={privacy} alt=\"Privacy\"></img>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\RegisterForm.js",["182","183"],"import React, { useState, useEffect } from \"react\";\r\nimport UserSelect from \"./UserSelect\";\r\nimport reg from \"../images/Register.svg\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport logo from \"../images/Logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\nconst RegisterForm = ({\r\n  userRegister,\r\n  establishmentRegister,\r\n  setSuccessful,\r\n}) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [user, setUser] = useState(\"User\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rePassword, setRePassword] = useState(\"\");\r\n  const [isSame, setIsSame] = useState(null);\r\n  const [isVisible, setVisible] = useState(false);\r\n  const handleVisibility = () => setVisible(!isVisible);\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [emailVisible, setEmailVisible] = useState(false);\r\n  const showEmail = { display: emailVisible ? \"\" : \"none\" };\r\n  const handleRePassword = (event) => setRePassword(event.target.value);\r\n  const comparePassword = () => {\r\n    if (rePassword == \"\") setIsSame(null);\r\n    else if (password == rePassword) setIsSame(true);\r\n    else setIsSame(false);\r\n  };\r\n  const handleUser = async (data, e) => {\r\n    if (isSame) {\r\n      const newUser = {\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        password: data.password,\r\n      };\r\n      const isSuccessful = await userRegister(newUser);\r\n      const emailFound = isSuccessful.find((element) => element === \"email\");\r\n      if (emailFound) {\r\n        setEmailError(data.email);\r\n        setEmailVisible(true);\r\n      }\r\n      if (isSuccessful.length === 0) {\r\n        e.target.reset();\r\n        setSuccessful();\r\n      }\r\n    }\r\n  };\r\n  const handleEstablishment = async (data, e) => {\r\n    if (isSame) {\r\n      const establishment = {\r\n        name: data.establishmentName,\r\n        contactPerson: data.contactPerson,\r\n        email: data.email,\r\n        password: data.password,\r\n      };\r\n      const isSuccessful = await establishmentRegister(establishment);\r\n      console.log(isSuccessful.length);\r\n      const emailFound = isSuccessful.find((element) => element === \"email\");\r\n      if (emailFound) {\r\n        setEmailError(data.email);\r\n        setEmailVisible(true);\r\n      }\r\n      if (isSuccessful.length === 0) {\r\n        e.target.reset();\r\n        setSuccessful();\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"visible\";\r\n  }, []);\r\n  console.log(isSame);\r\n  return (\r\n    <div className=\"container section-grid register-form\">\r\n      <div className=\"img\">\r\n        <img src={reg} alt=\"Register Icon\" />\r\n      </div>\r\n      <div className=\"main-form\">\r\n        <div className=\"title-logo\">\r\n          <Link to=\"/\">\r\n            <img src={logo} alt=\"logo\" />\r\n            <h1>PHTrace</h1>\r\n          </Link>\r\n        </div>\r\n        <form\r\n          className=\"frm frm-register\"\r\n          onSubmit={handleSubmit(\r\n            user === \"User\" ? handleUser : handleEstablishment\r\n          )}\r\n        >\r\n          <div className=\"frm-title\">\r\n            <h2>Sign Up</h2>\r\n            <h6>Enter your details to create your account</h6>\r\n          </div>\r\n          <UserSelect\r\n            description={\"Register as...\"}\r\n            user={user}\r\n            setUser={setUser}\r\n          />\r\n          {user === \"User\" ? (\r\n            <>\r\n              <div>\r\n                <label>First Name</label>\r\n                <input\r\n                  name=\"firstName\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"First name\"\r\n                />\r\n                {errors.firstName && <p>First Name is required</p>}\r\n              </div>\r\n              <div>\r\n                <label>Last Name</label>\r\n                <input\r\n                  name=\"lastName\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Last name\"\r\n                />\r\n                {errors.lastName && <p>Last Name is required</p>}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <label>Contact Person</label>\r\n                <input\r\n                  name=\"contactPerson\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Contact Person\"\r\n                />\r\n                {errors.contactPerson && <p>Contact Person is required</p>}\r\n              </div>\r\n              <div>\r\n                <label>Establishment Name</label>\r\n                <input\r\n                  name=\"establishmentName\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Establishment name\"\r\n                />\r\n                {errors.establishmentName && (\r\n                  <p>Establishment name is required</p>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div>\r\n            <label>Email</label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Email\"\r\n              onChange={() => setEmailVisible(false)}\r\n            />\r\n            <p style={showEmail} className=\"error\">\r\n              {emailError} already exists{\" \"}\r\n            </p>\r\n            {errors.email && <p>Email is required</p>}\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <div className=\"pass-wrapper\">\r\n              <input\r\n                name=\"password\"\r\n                type={isVisible ? \"text\" : \"password\"}\r\n                placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n                ref={register({\r\n                  required: true,\r\n                  minLength: 8,\r\n                  pattern: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/i,\r\n                })}\r\n                maxLength=\"36\"\r\n              />\r\n              <i onClick={handleVisibility}>{eye}</i>\r\n            </div>\r\n            <div className=\"frm-helper\">\r\n              {errors.password && errors.password.type === \"minLength\" && (\r\n                <p>The password must be at least 8 characters</p>\r\n              )}\r\n              {errors.password && errors.password.type === \"pattern\" && (\r\n                <p>\r\n                  Your password must contain at least one number and one\r\n                  uppercase\r\n                </p>\r\n              )}\r\n              <small>Your password should be at least 8 characters</small>\r\n              <small>\r\n                Your password must contain at least one number and one uppercase\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label>Confirm password</label>\r\n            <div className=\"pass-wrapper\">\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                onChange={handleRePassword}\r\n                onKeyUp={comparePassword}\r\n                placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                minLength=\"8\"\r\n                maxLength=\"36\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"frm-helper\">\r\n              {isSame === false && <p>It does not match with your password</p>}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button className=\"btn\">Register</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterForm;\r\n","C:\\React\\PhTrace-Front-End\\src\\App.js",["184","185","186","187"],"import \"./index.css\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from \"./contexts/User/UserContext\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport Scanner from \"./components/Admin/Scanner\";\r\nimport UserCard from \"./components/User/UserCard\";\r\nimport Admin from \"./components/Admin/Admin\";\r\n// import Admin from './views/Admin/Admin'\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport usersApi from \"./services/usersApi\";\r\nimport loginApi from \"./services/loginApi\";\r\nimport establishmentsApi from \"./services/establishmentsApi\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"./components/Alert\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport textApi from \"./services/textApi\";\r\n// React Admin\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n  const [overflow, setOverFlow] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n    message: \"\",\r\n  });\r\n  const { vertical, horizontal, open, message } = state;\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") return;\r\n    setState({ ...state, open: false });\r\n  };\r\n  const [successfulRegister, setSuccessfulRegister] = useState(false);\r\n  const setSuccessful = () => {\r\n    setSuccessfulRegister(true);\r\n    setState({\r\n      ...state,\r\n      open: true,\r\n      message: \"Account successfully created. You may login now\",\r\n    });\r\n  };\r\n  const run = async (id) => {\r\n    const response = await establishmentsApi.getData(id);\r\n    userContext.setUser(response.data);\r\n  };\r\n  const getUser = async (id) => {\r\n    const response = await usersApi.getData(id);\r\n    userContext.setUser(response.data);\r\n  };\r\n  const userLogin = async (user) => {\r\n    try {\r\n      const response = await loginApi.login(user);\r\n      window.localStorage.setItem(\r\n        \"loggedInUser\",\r\n        JSON.stringify(response.data)\r\n      );\r\n      if (response.data.user) {\r\n        userContext.setUser(response.data.user);\r\n        usersApi.setToken(response.data.token);\r\n      } else {\r\n        establishmentsApi.setToken(response.data.token);\r\n        if (response.data.establishment.role[0] === \"admin\")\r\n          run(response.data.establishment.id);\r\n        else userContext.setUser(response.data.establishment);\r\n      }\r\n    } catch (exception) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const userRegister = async (user) => {\r\n    const array = [];\r\n    try {\r\n      await usersApi.register(user);\r\n      return array;\r\n    } catch (exception) {\r\n      const response = exception.response.data.error;\r\n      const error = JSON.stringify(response);\r\n      if (error.indexOf(\"email\") > 0) array.push(\"email\");\r\n      if (error.indexOf(\"contactNumber\") > 0) array.push(\"contactNumber\");\r\n      return array;\r\n    }\r\n  };\r\n  const establishmentRegister = async (establishment) => {\r\n    const array = [];\r\n    try {\r\n      await establishmentsApi.register(establishment);\r\n      return array;\r\n    } catch (exception) {\r\n      const response = exception.response.data.error;\r\n      const error = JSON.stringify(response);\r\n      if (error.indexOf(\"email\") > 0) array.push(\"email\");\r\n      return array;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\r\n    if (loggedInUser) {\r\n      const parsedUser = JSON.parse(loggedInUser);\r\n      if (parsedUser.user) {\r\n        // userContext.setUser(parsedUser.user);\r\n        usersApi.setToken(parsedUser.token);\r\n        getUser(parsedUser.user.id);\r\n      } else {\r\n        establishmentsApi.setToken(parsedUser.token);\r\n        run(parsedUser.establishment.id);\r\n      }\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"visible\";\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {!userContext.user ? (\r\n            <>\r\n              <Navbar />\r\n              <Home />\r\n            </>\r\n          ) : userContext.user.role[0] === \"user\" ? (\r\n            <Redirect to=\"/settings\" />\r\n          ) : userContext.user.role[0] === \"admin\" ? (\r\n            <Redirect to=\"/dashboard\" />\r\n          ) : null}\r\n        </Route>\r\n        <Route path=\"/scan\">\r\n          {!userContext.user ? null : userContext.user.role[0] === \"admin\" ||\r\n            userContext.user.role[0] === \"employee\" ? (\r\n            <Scanner />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          {successfulRegister ? (\r\n            <Redirect to=\"/login\" />\r\n          ) : (\r\n            <>\r\n              <RegisterForm\r\n                userRegister={userRegister}\r\n                establishmentRegister={establishmentRegister}\r\n                setSuccessful={setSuccessful}\r\n              />\r\n            </>\r\n          )}\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          {userContext.user ? (\r\n            <Redirect to=\"/dashboard\" />\r\n          ) : (\r\n            <>\r\n              <LoginForm\r\n                userLogin={userLogin}\r\n                setSuccessfulRegister={setSuccessfulRegister}\r\n              />\r\n            </>\r\n          )}\r\n        </Route>\r\n        <Route path=\"/settings\">\r\n          {!userContext.user ? (\r\n            <Redirect to=\"/\" />\r\n          ) : userContext.user.role[0] === \"user\" ? (\r\n            <UserCard />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          {!userContext.user ? null : userContext.user.role[0] === \"admin\" ? (\r\n            <Admin run={run} />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n      </Switch>\r\n      <Snackbar\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\React\\PhTrace-Front-End\\src\\services\\usersApi.js",["188","189"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3001/users/\";\r\nlet config = null;\r\nlet token = null;\r\nconst setHeaders = (token) => {\r\n  config = {\r\n    headers: { Authorization: token },\r\n  };\r\n};\r\nconst setToken = (value) => {\r\n  token = `bearer ${value}`;\r\n  setHeaders(token);\r\n};\r\nconst register = async (user) => {\r\n  const response = await axios.post(`${baseUrl}register`, user);\r\n  return response;\r\n};\r\nconst getData = async (id) => {\r\n  const response = await axios.get(`${baseUrl}${id}`, config);\r\n  return response;\r\n};\r\nconst getQR = async (user) => {\r\n  const response = await axios.post(`${baseUrl}getqr`, { id: user.id }, config);\r\n  return response;\r\n};\r\nconst update = async (firstName, lastName, email, password) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}update`,\r\n    { firstName, lastName, email, password },\r\n    config\r\n  );\r\n  return response;\r\n};\r\nconst verifyCode = async (user, code) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}verify`,\r\n    { id: user.id, code: code },\r\n    config\r\n  );\r\n  return response;\r\n};\r\nconst healthCheck = async (user, checked) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}healthcheck`,\r\n    { id: user.id, checked },\r\n    config\r\n  );\r\n};\r\nconst uploadImage = async (file) => {\r\n  const response = await axios.post(`${baseUrl}upload`, file, config);\r\n  return response.data;\r\n};\r\nexport default {\r\n  register,\r\n  setToken,\r\n  getQR,\r\n  uploadImage,\r\n  verifyCode,\r\n  getData,\r\n  healthCheck,\r\n  update,\r\n};\r\n","C:\\React\\PhTrace-Front-End\\src\\services\\loginApi.js",["190"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3001/login/\";\r\n\r\nconst login = async (user) => {\r\n  const response = await axios.post(baseUrl, user);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  login,\r\n};\r\n","C:\\React\\PhTrace-Front-End\\src\\services\\textApi.js",["191"],"C:\\React\\PhTrace-Front-End\\src\\contexts\\User\\UserContext.js",[],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\Scanner.js",["192","193"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport UserContext from \"../../contexts/User/UserContext\";\r\nimport QrReader from \"react-qr-scanner\";\r\nimport scanner from \"../../images/scanner.jpg\";\r\nimport logo from \"../../images/Logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserForm from \"./UserForm\";\r\nimport DialogForm from \"../DialogForm\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"../Alert\";\r\nconst camStyle = {\r\n  height: 450,\r\n};\r\nconst Scanner = () => {\r\n  const [success, setSuccess] = useState(false);\r\n  const [state, setState] = useState({\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  });\r\n  const { vertical, horizontal } = state;\r\n  const [qr, setQR] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const userContext = useContext(UserContext);\r\n  const handleError = (err) => null;\r\n  const handleScan = async (data) => {\r\n    if (data) {\r\n      const array = JSON.parse(data);\r\n      setQR(array);\r\n      setOpen(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"hidden\";\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container scan section-grid\" id=\"scanner-container\">\r\n        <div className=\"image\">\r\n          <div\r\n            className=\"title-logo\"\r\n            onClick={() => (document.body.style.overflow = \"visible\")}\r\n          >\r\n            <Link to=\"/\">\r\n              <img src={logo} alt=\"logo\" />\r\n              <h1>PHTrace</h1>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <img src={scanner} />\r\n          </div>\r\n        </div>\r\n        <div className=\"scanner\">\r\n          <h1>Hold QR Steady and Clear To Scan</h1>\r\n          <QrReader\r\n            delay={1000}\r\n            style={camStyle}\r\n            onError={handleError}\r\n            onScan={handleScan}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <DialogForm\r\n          open={open}\r\n          setOpen={setOpen}\r\n          title={\"Verifying New Visitor\"}\r\n          content={\"Personal Information of the User\"}\r\n        >\r\n          <UserForm\r\n            qr={qr}\r\n            setSuccess={setSuccess}\r\n            setOpen={setOpen}\r\n            userContext={userContext}\r\n          />\r\n        </DialogForm>\r\n      </div>\r\n      <Snackbar\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={success}\r\n        onClose={() => setSuccess(!success)}\r\n      >\r\n        <Alert onClose={() => setSuccess(!success)} severity=\"success\">\r\n          Successfully added\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default Scanner;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\DialogForm.js",[],"C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserUpload.js",[],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\Table.js",["194"],"C:\\React\\PhTrace-Front-End\\src\\utils\\date.js",[],["195","196"],"C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserQRCode.js",["197","198"],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\List.js",["199","200","201"],"import React, { useState, useEffect } from \"react\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nconst del = {\r\n  color: \"#f44336\",\r\n  cursor: \"pointer\",\r\n};\r\nconst message = {\r\n  color: \"#4CAF50\",\r\n  cursor: \"pointer\",\r\n};\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\nconst List = ({\r\n  data,\r\n  index,\r\n  handleDelete,\r\n  isChecked,\r\n  setIsChecked,\r\n  open,\r\n  setOpen,\r\n  setNumber,\r\n  numbers,\r\n  setNumbers,\r\n}) => {\r\n  const [isUser, setIsUser] = useState(false);\r\n  let {\r\n    firstName,\r\n    lastName,\r\n    timeStamp,\r\n    temperature,\r\n    status,\r\n    id,\r\n    email,\r\n    contactNumber,\r\n    role,\r\n  } = data;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleTheDelete = (data) => {\r\n    handleDelete(data);\r\n    setAnchorEl(null);\r\n  };\r\n  const handleSms = (contactNumber) => {\r\n    setOpen(true);\r\n    setNumber(contactNumber);\r\n  };\r\n  const handleCheck = (i, contactNumber) => {\r\n    const newChecked = isChecked.map((element, index) =>\r\n      index === i ? !element : element\r\n    );\r\n    if (isChecked[i]) {\r\n      setNumbers(numbers.filter((n) => n !== contactNumber));\r\n    } else {\r\n      setNumbers(numbers.concat(contactNumber));\r\n    }\r\n    setIsChecked(newChecked);\r\n  };\r\n  useEffect(() => {\r\n    if (timeStamp) {\r\n      setIsUser(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"rows\"\r\n            onChange={() => handleCheck(index, contactNumber)}\r\n            checked={isChecked[index]}\r\n          />\r\n        </td>\r\n        <td>{index + 1}</td>\r\n        <td>\r\n          {firstName} {lastName}\r\n        </td>\r\n        <td>{email}</td>\r\n        {<td>{contactNumber}</td>}\r\n        {isUser === true ? null : <td>{role}</td>}\r\n        {isUser && <td>{format(parseISO(timeStamp), \"HH:mm\")}</td>}\r\n        {isUser && <td>{temperature}</td>}\r\n        {isUser && <td>{status}</td>}\r\n        <td className=\"action\">\r\n          <Button\r\n            aria-controls=\"customized-menu\"\r\n            aria-haspopup=\"true\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n          >\r\n            Open\r\n          </Button>\r\n          <StyledMenu\r\n            id=\"customized-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <StyledMenuItem>\r\n              <ListItemIcon onClick={() => handleSms(contactNumber)}>\r\n                <SendIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Send sms\" />\r\n            </StyledMenuItem>\r\n            <StyledMenuItem onClick={() => handleTheDelete(id)}>\r\n              <ListItemIcon>\r\n                <DeleteIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Delete\" />\r\n            </StyledMenuItem>\r\n          </StyledMenu>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n",["202","203"],"C:\\React\\PhTrace-Front-End\\src\\utils\\healthcheck.js",[],"C:\\React\\PhTrace-Front-End\\src\\components\\Navbar.js",[],"C:\\React\\PhTrace-Front-End\\src\\services\\establishmentsApi.js",["204"],"import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/establishments\";\r\nconst dohUrl = \"http://localhost:3001/doh\";\r\nlet config = null;\r\nlet token = null;\r\nconst setHeaders = (token) => {\r\n  config = {\r\n    headers: { Authorization: token },\r\n  };\r\n};\r\nconst setToken = (value) => {\r\n  token = `bearer ${value}`;\r\n  setHeaders(token);\r\n};\r\n\r\nconst register = async (establishment) => {\r\n  const response = await axios.post(`${baseUrl}/register`, establishment);\r\n  return response;\r\n};\r\nconst addUser = async (userInstance) => {\r\n  const response = await axios.post(`${baseUrl}`, userInstance, config);\r\n  return response;\r\n};\r\nconst update = async (data) => {\r\n  const response = await axios.put(`${baseUrl}`, data, config);\r\n  return response;\r\n};\r\nconst addEmployee = async (employee) => {\r\n  const response = await axios.post(`${baseUrl}/employee`, employee, config);\r\n  return response;\r\n};\r\nconst delUser = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response;\r\n};\r\nconst delEmployee = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/employee/${id}`, config);\r\n  return response;\r\n};\r\nconst getData = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`, config);\r\n  return response;\r\n};\r\nconst addNotification = async () => {\r\n  const response = await axios.get(dohUrl, config);\r\n  return response;\r\n};\r\nconst deleteNotification = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/notification/${id}`, config);\r\n  return response;\r\n};\r\nexport default {\r\n  register,\r\n  addUser,\r\n  addEmployee,\r\n  delUser,\r\n  delEmployee,\r\n  setToken,\r\n  getData,\r\n  update,\r\n  addNotification,\r\n  deleteNotification,\r\n};\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\UserForm.js",["205","206","207"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport establishmentsApi from \"../../services/establishmentsApi\";\r\nconst baseUrl = \"http://localhost:3001\";\r\nconst imgStyle = {\r\n  maxHeight: \"15rem\",\r\n  borderRadius: \"16px\",\r\n};\r\nconst UserForm = ({ qr, setSuccess, setOpen, userContext }) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { firstName, lastName, email, contactNumber, status, id } = qr;\r\n  const newData = (data) => {\r\n    let newObj = { ...data };\r\n    Object.keys(data).map((key, index) => {\r\n      if (data[key] === \"\" || data[key] === undefined)\r\n        newObj[`${key}`] = qr[`${key}`];\r\n    });\r\n    newObj.contactNumber = contactNumber;\r\n    newObj.userId = id;\r\n    newObj.email = email;\r\n    return newObj;\r\n  };\r\n  const handleForm = async (data) => {\r\n    try {\r\n      await userContext.add(newData(data), \"user\");\r\n      setSuccess(true);\r\n      setOpen(false);\r\n    } catch (exception) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"frm frm-dialog\" onSubmit={handleSubmit(handleForm)}>\r\n        <div>\r\n          <div className=\"img scanner-img\">\r\n            <label>Identification Card</label>\r\n            {/* Dapat may / tinesting ko munang wala */}\r\n            <img\r\n              src={`${baseUrl}/${qr.img}`}\r\n              alt=\"identification-card\"\r\n              style={imgStyle}\r\n            />\r\n          </div>\r\n          <div className=\"scanner-form\">\r\n            <div>\r\n              <label>First Name </label>\r\n              <input\r\n                type=\"text\"\r\n                ref={register}\r\n                name=\"firstName\"\r\n                placeholder={firstName}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Last Name </label>\r\n              <input\r\n                type=\"text\"\r\n                ref={register}\r\n                name=\"lastName\"\r\n                placeholder={lastName}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Status</label>\r\n              <input\r\n                type=\"text\"\r\n                ref={register}\r\n                name=\"status\"\r\n                placeholder={status}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Temperature </label>\r\n              <input\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n                name=\"temperature\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-end\">\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button>Cancel</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default UserForm;\r\n\r\n//        let instance;\r\n// if(data.firstName){\r\n//     instance = {\r\n//         firstName: data.firstName,\r\n//         lastName: data.lastName,\r\n//     }\r\n// }\r\n// else{\r\n//     instance = {\r\n//         firstName,\r\n//         lastName\r\n//     }\r\n// }\r\n// instance.userId = id;\r\n// instance.email = email;\r\n// instance.contactNumber = contactNumber;\r\n// instance.status = status;\r\n// instance.temperature = data.temperature;\r\n// instance.contactNumber = contactNumber;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\AdminDashboard.js",["208"],"import React, { useContext, useState } from \"react\";\r\nimport UserContext from \"../../contexts/User/UserContext\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { today } from \"../../utils/date\";\r\nimport DialogForm from \"../DialogForm\";\r\nimport FilterDashboard from \"./FilterDashboard\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\nconst AdminDashboard = () => {\r\n  const userContext = useContext(UserContext);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = () => setOpen(!open);\r\n  const [state, setState] = useState({\r\n    good: 50,\r\n    mild: 15,\r\n    severe: 35,\r\n    infected: 40,\r\n    vaccinated: 5,\r\n  });\r\n  const [dateSet, setDate] = useState(today);\r\n  const data = {\r\n    labels: [\"Good\", \"Mild\", \"Severe\", \"Infected\", \"Vaccinated\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Visitors\",\r\n        data: [\r\n          state.good,\r\n          state.mild,\r\n          state.severe,\r\n          state.infected,\r\n          state.vaccinated,\r\n        ],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"buttons\">\r\n        <div id=\"date\">\r\n          <span>Date: {dateSet}</span>\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-add icon\" onClick={() => setOpen(true)}>\r\n            <CalendarTodayIcon />\r\n            <span>Choose a Date</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Bar data={data} options={options} />\r\n      <DialogForm\r\n        open={open}\r\n        setOpen={setOpen}\r\n        title={\"Filter By Date\"}\r\n        content={\"Choose a date of your choice to filter the graph\"}\r\n      >\r\n        <FilterDashboard\r\n          setOpen={setOpen}\r\n          handleClose={handleClose}\r\n          setState={setState}\r\n          setDate={setDate}\r\n        />\r\n      </DialogForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserVerification.js",["209","210","211","212","213","214","215","216"],"C:\\React\\PhTrace-Front-End\\src\\components\\Admin\\FilterDashboard.js",["217","218","219"],"C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserQr.js",["220"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DialogForm from \"../DialogForm\";\r\nimport UserContext from \"../../contexts/User/UserContext\";\r\nimport UserPrivacy from \"./UserPrivacy\";\r\nimport UserVerification from \"./UserVerification\";\r\nimport UserQRCode from \"./UserQRCode\";\r\nimport UserSymptoms from \"./UserSymptoms\";\r\nconst UserQr = ({ open, setOpen, id }) => {\r\n  const userContext = useContext(UserContext);\r\n  const content1 =\r\n    \"We at PHTrace are advocates of data privacy, and ensure that we will only require what is completely necessary for the application to perform its functions. No information will be collected from our users until they have agreed to the terms and conditions provided in our privacy policy and have given their consent. We ask users to answer a brief Health Declaration Checklist and report if they are experiencing any common symptoms of COVID-19.\";\r\n  const content2 = \"Provide your phone number below to verify\";\r\n  const content3 = \"Please Check your SMS and enter the code given to you\";\r\n  const [page, setPage] = useState(1);\r\n  const [state, setState] = useState(1);\r\n  useEffect(() => {\r\n    if (open === false) setPage(1);\r\n  }, [open]);\r\n  if (page === 1) {\r\n    return (\r\n      <div>\r\n        <DialogForm\r\n          open={open}\r\n          setOpen={setOpen}\r\n          title={\"WHAT INFORMATION WE COLLECT\"}\r\n          content={content1}\r\n        >\r\n          <UserPrivacy setPage={setPage} setOpen={setOpen} />\r\n        </DialogForm>\r\n      </div>\r\n    );\r\n  } else if (!userContext.user.phone_verified) {\r\n    return (\r\n      <div>\r\n        <DialogForm\r\n          open={open}\r\n          setOpen={setOpen}\r\n          title={\"Verification of Phone Number\"}\r\n          content={state === 1 ? content2 : content3}\r\n        >\r\n          <UserVerification\r\n            setPage={setPage}\r\n            setOpen={setOpen}\r\n            state={state}\r\n            setState={setState}\r\n          />\r\n        </DialogForm>\r\n      </div>\r\n    );\r\n  } else if ((page === 2 && userContext.user.phone_verified) || page === 3) {\r\n    return (\r\n      <div>\r\n        <DialogForm\r\n          open={open}\r\n          setOpen={setOpen}\r\n          title={\"Do you experience any of the following\"}\r\n          content={null}\r\n        >\r\n          <UserSymptoms setPage={setPage} setOpen={setOpen} />\r\n        </DialogForm>\r\n      </div>\r\n    );\r\n  } else if (page == 4) {\r\n    return (\r\n      <div>\r\n        <DialogForm\r\n          open={open}\r\n          setOpen={setOpen}\r\n          title={\"Your QR Code\"}\r\n          content={\"You can download it or take a screenshot\"}\r\n        >\r\n          <UserQRCode user={userContext.user} />\r\n        </DialogForm>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default UserQr;\r\n","C:\\React\\PhTrace-Front-End\\src\\components\\User\\UserPrivacy.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":23,"column":6,"nodeType":"227","endLine":23,"endColumn":8,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":19,"column":8,"nodeType":"231","messageId":"232","endLine":19,"endColumn":16},{"ruleId":"225","severity":1,"message":"233","line":84,"column":6,"nodeType":"227","endLine":84,"endColumn":8,"suggestions":"234"},{"ruleId":"221","replacedBy":"235"},{"ruleId":"223","replacedBy":"236"},{"ruleId":"225","severity":1,"message":"237","line":44,"column":6,"nodeType":"227","endLine":44,"endColumn":17,"suggestions":"238"},{"ruleId":"229","severity":1,"message":"239","line":13,"column":10,"nodeType":"231","messageId":"232","endLine":13,"endColumn":14},{"ruleId":"229","severity":1,"message":"240","line":13,"column":16,"nodeType":"231","messageId":"232","endLine":13,"endColumn":23},{"ruleId":"229","severity":1,"message":"241","line":14,"column":11,"nodeType":"231","messageId":"232","endLine":14,"endColumn":24},{"ruleId":"229","severity":1,"message":"242","line":12,"column":36,"nodeType":"231","messageId":"232","endLine":12,"endColumn":42},{"ruleId":"229","severity":1,"message":"243","line":12,"column":44,"nodeType":"231","messageId":"232","endLine":12,"endColumn":49},{"ruleId":"229","severity":1,"message":"244","line":1,"column":26,"nodeType":"231","messageId":"232","endLine":1,"endColumn":35},{"ruleId":"229","severity":1,"message":"245","line":27,"column":54,"nodeType":"231","messageId":"232","endLine":27,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":12,"column":40,"nodeType":"248","messageId":"249","endLine":12,"endColumn":42},{"ruleId":"229","severity":1,"message":"250","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":18,"column":33,"nodeType":"248","messageId":"249","endLine":18,"endColumn":35},{"ruleId":"229","severity":1,"message":"250","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":25},{"ruleId":"229","severity":1,"message":"251","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":24,"column":47,"nodeType":"254","endLine":24,"endColumn":60},{"ruleId":"255","severity":1,"message":"256","line":28,"column":20,"nodeType":"257","messageId":"258","endLine":28,"endColumn":22},{"ruleId":"255","severity":1,"message":"256","line":29,"column":23,"nodeType":"257","messageId":"258","endLine":29,"endColumn":25},{"ruleId":"229","severity":1,"message":"259","line":18,"column":8,"nodeType":"231","messageId":"232","endLine":18,"endColumn":15},{"ruleId":"229","severity":1,"message":"260","line":22,"column":10,"nodeType":"231","messageId":"232","endLine":22,"endColumn":18},{"ruleId":"229","severity":1,"message":"261","line":22,"column":20,"nodeType":"231","messageId":"232","endLine":22,"endColumn":31},{"ruleId":"225","severity":1,"message":"262","line":110,"column":6,"nodeType":"227","endLine":110,"endColumn":8,"suggestions":"263"},{"ruleId":"229","severity":1,"message":"264","line":44,"column":9,"nodeType":"231","messageId":"232","endLine":44,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":54,"column":1,"nodeType":"267","endLine":63,"endColumn":3},{"ruleId":"265","severity":1,"message":"266","line":10,"column":1,"nodeType":"267","endLine":12,"endColumn":3},{"ruleId":"265","severity":1,"message":"266","line":12,"column":1,"nodeType":"267","endLine":15,"endColumn":3},{"ruleId":"229","severity":1,"message":"268","line":16,"column":17,"nodeType":"231","messageId":"232","endLine":16,"endColumn":25},{"ruleId":"269","severity":1,"message":"270","line":49,"column":13,"nodeType":"271","endLine":49,"endColumn":34},{"ruleId":"229","severity":1,"message":"244","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"221","replacedBy":"272"},{"ruleId":"223","replacedBy":"273"},{"ruleId":"225","severity":1,"message":"274","line":11,"column":6,"nodeType":"227","endLine":11,"endColumn":8,"suggestions":"275"},{"ruleId":"269","severity":1,"message":"270","line":15,"column":9,"nodeType":"271","endLine":15,"endColumn":23},{"ruleId":"229","severity":1,"message":"276","line":11,"column":7,"nodeType":"231","messageId":"232","endLine":11,"endColumn":10},{"ruleId":"229","severity":1,"message":"277","line":15,"column":7,"nodeType":"231","messageId":"232","endLine":15,"endColumn":14},{"ruleId":"225","severity":1,"message":"278","line":103,"column":6,"nodeType":"227","endLine":103,"endColumn":8,"suggestions":"279"},{"ruleId":"221","replacedBy":"280"},{"ruleId":"223","replacedBy":"281"},{"ruleId":"265","severity":1,"message":"266","line":52,"column":1,"nodeType":"267","endLine":63,"endColumn":3},{"ruleId":"229","severity":1,"message":"282","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":25},{"ruleId":"229","severity":1,"message":"242","line":11,"column":35,"nodeType":"231","messageId":"232","endLine":11,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":15,"column":40,"nodeType":"248","messageId":"249","endLine":15,"endColumn":42},{"ruleId":"229","severity":1,"message":"283","line":20,"column":9,"nodeType":"231","messageId":"232","endLine":20,"endColumn":20},{"ruleId":"229","severity":1,"message":"284","line":11,"column":23,"nodeType":"231","messageId":"232","endLine":11,"endColumn":37},{"ruleId":"229","severity":1,"message":"285","line":12,"column":10,"nodeType":"231","messageId":"232","endLine":12,"endColumn":26},{"ruleId":"229","severity":1,"message":"286","line":12,"column":28,"nodeType":"231","messageId":"232","endLine":12,"endColumn":47},{"ruleId":"229","severity":1,"message":"287","line":13,"column":32,"nodeType":"231","messageId":"232","endLine":13,"endColumn":55},{"ruleId":"229","severity":1,"message":"264","line":24,"column":13,"nodeType":"231","messageId":"232","endLine":24,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":65,"column":22,"nodeType":"257","messageId":"258","endLine":65,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":70,"column":22,"nodeType":"257","messageId":"258","endLine":70,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":75,"column":22,"nodeType":"257","messageId":"258","endLine":75,"endColumn":24},{"ruleId":"229","severity":1,"message":"250","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":25},{"ruleId":"229","severity":1,"message":"288","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"289","line":2,"column":18,"nodeType":"231","messageId":"232","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":63,"column":19,"nodeType":"257","messageId":"258","endLine":63,"endColumn":21},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSuccessfulRegister'. Either include it or remove the dependency array. If 'setSuccessfulRegister' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["292"],"no-unused-vars","'HomeIcon' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'state', 'userContext.user.id', and 'userContext.user.notifications.length'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["293"],["290"],["291"],"React Hook useEffect has a missing dependency: 'isOneChecked'. Either include it or remove the dependency array.",["294"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'notifications' is assigned a value but never used.","'errors' is assigned a value but never used.","'reset' is assigned a value but never used.","'useEffect' is defined but never used.","'contactNumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useContext' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'textApi' is defined but never used.","'overflow' is assigned a value but never used.","'setOverFlow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUser' and 'run'. Either include them or remove the dependency array.",["295"],"'response' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["290"],["291"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["296"],"'del' is assigned a value but never used.","'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'timeStamp'. Either include it or remove the dependency array.",["297"],["290"],["291"],"'establishmentsApi' is defined but never used.","'userContext' is assigned a value but never used.","'setNumberError' is assigned a value but never used.","'verificationCode' is assigned a value but never used.","'setVerificationCode' is assigned a value but never used.","'setContactNumberVisible' is assigned a value but never used.","'format' is defined but never used.","'parseISO' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [setSuccessfulRegister]",{"range":"310","text":"311"},"Update the dependencies array to be: [state, userContext.user.id, userContext.user.notifications.length]",{"range":"312","text":"313"},"Update the dependencies array to be: [isChecked, isOneChecked]",{"range":"314","text":"315"},"Update the dependencies array to be: [getUser, run]",{"range":"316","text":"317"},"Update the dependencies array to be: [user]",{"range":"318","text":"319"},"Update the dependencies array to be: [timeStamp]",{"range":"320","text":"321"},[778,780],"[setSuccessfulRegister]",[3192,3194],"[state, userContext.user.id, userContext.user.notifications.length]",[1374,1385],"[isChecked, isOneChecked]",[3849,3851],"[getUser, run]",[345,347],"[user]",[2462,2464],"[timeStamp]"]